library(tidyverse)
library(magrittr)
install.packages("MAP")
library(MAP)
install.packages("tree")
library(tree)
install.packages("ggmap")
library(ggmap)
install.packages("rworldmap")
install.packages("randomForest")
library(randomForest)
library(readr)
df_15 <- read_csv("2015.csv")
View(df_15)
library(readr)
df_16 <- read_csv("2016.csv")
View(df_16)
library(readr)
df_17 <- read_csv("2017.csv")
View(df_17)
library(readr)
df_18 <- read_csv("2018.csv")
View(df_18)
library(readr)
df_19 <- read_csv("2019.csv")
View(df_19)
colnames(df_15)
colnames(df_16)
colnames(df_17)
colnames(df_18)
colnames(df_19)
str(df_15)
str(df_16)
str(df_17)
str(df_18)
str(df_19)
as_tibble(df_18)
as_tibble(df_19)
df_18 <-
df_18%>%
df_18$`Perceptions of corruption` <- as.numeric(as.character(df_18$`Perceptions of corruption`))
df_18%>%
df_18$`Perceptions of corruption` <- as.numeric(as.character(df_18$`Perceptions of corruption`))
as_tibble(df_18)
df_18 %>%
mutate(Perceptions of corruption = as.numeric(Perceptions of corruption))
library(readr)
X2018 <- read_csv("2018.csv")
View(X2018)
X2018 <- mutate(X2018,Perceptions of corruption=as.numeric(Perceptions of corruption))
X2018$`Perceptions of corruption`<- as.numeric(X2018$`Perceptions of corruption`)
as.tibble(X2018)
as_tibble(df_18)
df_18$`Perceptions of corruption`<- as.numeric(df_18$`Perceptions of corruption`)
str(df_18)
as.tibble(df_18)
mean(df_15$`Happiness Score`)
View(df_16)
mean(df_16$`Happiness Score`)
mean(df_17$Happiness.Score)
mean(df_18$Score)
mean(df_19$Score)
df_15%>%
ggplot(aes(x=Score,y=GDP per capita))+geom_point()+geom_smooth(lm = loess)+labs(title = "Score vs GDP")
df_18%>%
ggplot(aes(x=Score,y=GDP per capita))+geom_point()+geom_smooth(lm = loess)+labs(title = "Score vs GDP")
ggplot(aes(x=Score,y=GDP per capita))+geom_point()+geom_smooth()+labs(title = "Score vs GDP")
df_18%>%
ggplot(data = df_18)
df_18%>%
ggplot(data = df_18,aes(x=Score,y=GDP per capita))+geom_point()
library(tidyverse)
library(lubridate)
library(ggmap)
library(magrittr)
install.packages("maps")
library(maps)
install.packages("rworldmap")
library(RColorBrewer)
library(randomForest)
library(rworldmap)
install.packages("ISLR")
library(tree)
install.packages("cvTools")
library(readr)
df_2015 <- read_csv("2015.csv")
View(df_2015)
library(readr)
df_2016 <- read_csv("2016.csv")
View(df_2016)
library(readr)
df_2017 <- read_csv("2017.csv")
View(df_2017)
library(readr)
df_2018 <- read_csv("2018.csv")
View(df_2018)
library(readr)
df_2019 <- read_csv("2019.csv")
View(df_2019)
View(df_2015)
View(df_2016)
as.tibble(df_2015)
as_tibble(df_2015)
as_tibble(df_2016)
as_tibble(df_2017)
as_tibble(df_2018)
as_tibble(df_2019)
df_2018 <-
df_2018 %>%
set_colnames(c("Rank", "Country","Score","GDP", "Social_Support","Health_Expectancy","Freedom","Generosity", "Perceptions_Of_Corruption"))
df_2019 <-
df_2019 %>%
set_colnames(c("Rank", "Country","Score","GDP", "Social_Support","Health_Expectancy","Freedom","Generosity", "Perceptions_Of_Corruption"))
df_2018$Perceptions_Of_Corruption <- as.numeric(as.character(df_2018$Perceptions_Of_Corruption))
df_2018[is.na(df_2018)] <- mean(df_2018$Perceptions_Of_Corruption,na.rm = TRUE)
as_tibble(df_2018)
mean_d <- mean(df_2018$Score)
mean_d
std <- sd(df_2018$Score)
std
standardized_df <- df_2018 %>%
mutate(mean_Score = mean(Score)) %>%
mutate(sd_aff = sd(Score)) %>%
mutate(z_aff = (Score - mean_Score) / sd_aff)
View(standardized_df)
mean_std <-mean(standardized_df$z_aff)
mean_std
std_std <- sd(standardized_df$Score)
std_std
df_2018%>%
ggplot(aes(x=Score,y=GDP))+geom_point()+geom_smooth(lm=loess)+labs(title = "Score vs GDP")
df_2018%>%
ggplot(aes(x=Score,y=Health_Expectancy))+geom_point()+geom_smooth()+labs(title = "Score vs Health")
df_2018%>%
ggplot(aes(x=Score,y=Freedom))+geom_boxplot()+labs(title = "Score vs Freedom")
d <- data.frame(Country=df_2018$Country,value=df_2018$Score)
cols <- colorRampPalette(brewer.pal(7,"Blue"))(length(df_2018))
cols <- colorRampPalette(brewer.pal(7,"Greens"))(length(df_2018))
nn <-invisible(joinCountryData2Map(d,joinCode = "NAME",nameJoinColumn = "Country"))
mapCountryData(n,nameColumnToPlot = "value",mapTitle = "World map for Happiness Score",colourPalette = cols,oceanCol = "#CCCCCCCC",addLegend = TRUE,aspect = 1.1,borderCol = "Black",lwd = .1)
mapCountryData(n, nameColumnToPlot = "value" , mapTitle = "World map for Happiness Score" ,colourPalette = cols,oceanCol = "#CCCCCCCC",addLegend = TRUE,aspect = 1.1,borderCol = "Black",lwd = .1)
mapCountryData(n, nameColumnToPlot="value", mapTitle="World Map for Happiness Score",colourPalette=cols, oceanCol = "#CCCCCCCC", addLegend = TRUE,aspect = 1.1, borderCol = "Black", lwd =.1)
d <- data.frame(Country=df_2018$Country,value=df_2018$Score)
colsi <- colorRampPalette(brewer.pal(7,"Greens"))(length(df_2018))
nn <-invisible(joinCountryData2Map(d,joinCode = "NAME",nameJoinColumn = "Country"))
mapCountryData(n, nameColumnToPlot="value", mapTitle="World Map for Happiness Score",colourPalette=colsi, oceanCol = "#CCCCCCCC", addLegend = TRUE,aspect = 1.1, borderCol = "Black", lwd =.1)
